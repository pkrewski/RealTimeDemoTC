/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.truecaller.logging.kafka.events;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ui_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ui_record\",\"namespace\":\"com.truecaller.logging.kafka.events\",\"fields\":[{\"name\":\"truecaller_user\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"truedialer_user\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"test_group\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"event_sequence_number\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"event\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Boolean truecaller_user;
  @Deprecated public java.lang.Boolean truedialer_user;
  @Deprecated public java.lang.CharSequence test_group;
  @Deprecated public java.lang.Long event_sequence_number;
  @Deprecated public java.lang.CharSequence event;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ui_record() {}

  /**
   * All-args constructor.
   */
  public ui_record(java.lang.Boolean truecaller_user, java.lang.Boolean truedialer_user, java.lang.CharSequence test_group, java.lang.Long event_sequence_number, java.lang.CharSequence event) {
    this.truecaller_user = truecaller_user;
    this.truedialer_user = truedialer_user;
    this.test_group = test_group;
    this.event_sequence_number = event_sequence_number;
    this.event = event;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return truecaller_user;
    case 1: return truedialer_user;
    case 2: return test_group;
    case 3: return event_sequence_number;
    case 4: return event;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: truecaller_user = (java.lang.Boolean)value$; break;
    case 1: truedialer_user = (java.lang.Boolean)value$; break;
    case 2: test_group = (java.lang.CharSequence)value$; break;
    case 3: event_sequence_number = (java.lang.Long)value$; break;
    case 4: event = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'truecaller_user' field.
   */
  public java.lang.Boolean getTruecallerUser() {
    return truecaller_user;
  }

  /**
   * Sets the value of the 'truecaller_user' field.
   * @param value the value to set.
   */
  public void setTruecallerUser(java.lang.Boolean value) {
    this.truecaller_user = value;
  }

  /**
   * Gets the value of the 'truedialer_user' field.
   */
  public java.lang.Boolean getTruedialerUser() {
    return truedialer_user;
  }

  /**
   * Sets the value of the 'truedialer_user' field.
   * @param value the value to set.
   */
  public void setTruedialerUser(java.lang.Boolean value) {
    this.truedialer_user = value;
  }

  /**
   * Gets the value of the 'test_group' field.
   */
  public java.lang.CharSequence getTestGroup() {
    return test_group;
  }

  /**
   * Sets the value of the 'test_group' field.
   * @param value the value to set.
   */
  public void setTestGroup(java.lang.CharSequence value) {
    this.test_group = value;
  }

  /**
   * Gets the value of the 'event_sequence_number' field.
   */
  public java.lang.Long getEventSequenceNumber() {
    return event_sequence_number;
  }

  /**
   * Sets the value of the 'event_sequence_number' field.
   * @param value the value to set.
   */
  public void setEventSequenceNumber(java.lang.Long value) {
    this.event_sequence_number = value;
  }

  /**
   * Gets the value of the 'event' field.
   */
  public java.lang.CharSequence getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(java.lang.CharSequence value) {
    this.event = value;
  }

  /** Creates a new ui_record RecordBuilder */
  public static com.truecaller.logging.kafka.events.ui_record.Builder newBuilder() {
    return new com.truecaller.logging.kafka.events.ui_record.Builder();
  }
  
  /** Creates a new ui_record RecordBuilder by copying an existing Builder */
  public static com.truecaller.logging.kafka.events.ui_record.Builder newBuilder(com.truecaller.logging.kafka.events.ui_record.Builder other) {
    return new com.truecaller.logging.kafka.events.ui_record.Builder(other);
  }
  
  /** Creates a new ui_record RecordBuilder by copying an existing ui_record instance */
  public static com.truecaller.logging.kafka.events.ui_record.Builder newBuilder(com.truecaller.logging.kafka.events.ui_record other) {
    return new com.truecaller.logging.kafka.events.ui_record.Builder(other);
  }
  
  /**
   * RecordBuilder for ui_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ui_record>
    implements org.apache.avro.data.RecordBuilder<ui_record> {

    private java.lang.Boolean truecaller_user;
    private java.lang.Boolean truedialer_user;
    private java.lang.CharSequence test_group;
    private java.lang.Long event_sequence_number;
    private java.lang.CharSequence event;

    /** Creates a new Builder */
    private Builder() {
      super(com.truecaller.logging.kafka.events.ui_record.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.truecaller.logging.kafka.events.ui_record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.truecaller_user)) {
        this.truecaller_user = data().deepCopy(fields()[0].schema(), other.truecaller_user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.truedialer_user)) {
        this.truedialer_user = data().deepCopy(fields()[1].schema(), other.truedialer_user);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.test_group)) {
        this.test_group = data().deepCopy(fields()[2].schema(), other.test_group);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_sequence_number)) {
        this.event_sequence_number = data().deepCopy(fields()[3].schema(), other.event_sequence_number);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event)) {
        this.event = data().deepCopy(fields()[4].schema(), other.event);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ui_record instance */
    private Builder(com.truecaller.logging.kafka.events.ui_record other) {
            super(com.truecaller.logging.kafka.events.ui_record.SCHEMA$);
      if (isValidValue(fields()[0], other.truecaller_user)) {
        this.truecaller_user = data().deepCopy(fields()[0].schema(), other.truecaller_user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.truedialer_user)) {
        this.truedialer_user = data().deepCopy(fields()[1].schema(), other.truedialer_user);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.test_group)) {
        this.test_group = data().deepCopy(fields()[2].schema(), other.test_group);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_sequence_number)) {
        this.event_sequence_number = data().deepCopy(fields()[3].schema(), other.event_sequence_number);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event)) {
        this.event = data().deepCopy(fields()[4].schema(), other.event);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'truecaller_user' field */
    public java.lang.Boolean getTruecallerUser() {
      return truecaller_user;
    }
    
    /** Sets the value of the 'truecaller_user' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder setTruecallerUser(java.lang.Boolean value) {
      validate(fields()[0], value);
      this.truecaller_user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'truecaller_user' field has been set */
    public boolean hasTruecallerUser() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'truecaller_user' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder clearTruecallerUser() {
      truecaller_user = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'truedialer_user' field */
    public java.lang.Boolean getTruedialerUser() {
      return truedialer_user;
    }
    
    /** Sets the value of the 'truedialer_user' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder setTruedialerUser(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.truedialer_user = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'truedialer_user' field has been set */
    public boolean hasTruedialerUser() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'truedialer_user' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder clearTruedialerUser() {
      truedialer_user = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'test_group' field */
    public java.lang.CharSequence getTestGroup() {
      return test_group;
    }
    
    /** Sets the value of the 'test_group' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder setTestGroup(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.test_group = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'test_group' field has been set */
    public boolean hasTestGroup() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'test_group' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder clearTestGroup() {
      test_group = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'event_sequence_number' field */
    public java.lang.Long getEventSequenceNumber() {
      return event_sequence_number;
    }
    
    /** Sets the value of the 'event_sequence_number' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder setEventSequenceNumber(java.lang.Long value) {
      validate(fields()[3], value);
      this.event_sequence_number = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'event_sequence_number' field has been set */
    public boolean hasEventSequenceNumber() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'event_sequence_number' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder clearEventSequenceNumber() {
      event_sequence_number = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'event' field */
    public java.lang.CharSequence getEvent() {
      return event;
    }
    
    /** Sets the value of the 'event' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder setEvent(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.event = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'event' field has been set */
    public boolean hasEvent() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'event' field */
    public com.truecaller.logging.kafka.events.ui_record.Builder clearEvent() {
      event = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ui_record build() {
      try {
        ui_record record = new ui_record();
        record.truecaller_user = fieldSetFlags()[0] ? this.truecaller_user : (java.lang.Boolean) defaultValue(fields()[0]);
        record.truedialer_user = fieldSetFlags()[1] ? this.truedialer_user : (java.lang.Boolean) defaultValue(fields()[1]);
        record.test_group = fieldSetFlags()[2] ? this.test_group : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.event_sequence_number = fieldSetFlags()[3] ? this.event_sequence_number : (java.lang.Long) defaultValue(fields()[3]);
        record.event = fieldSetFlags()[4] ? this.event : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
