/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.truecaller.logging.kafka.events;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class app_event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"app_event\",\"namespace\":\"com.truecaller.logging.kafka.events\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"client_timestamp\",\"type\":\"long\",\"default\":0},{\"name\":\"app\",\"type\":{\"type\":\"record\",\"name\":\"app_record\",\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"os\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"}]}},{\"name\":\"user\",\"type\":{\"type\":\"record\",\"name\":\"user_record\",\"fields\":[{\"name\":\"register_id\",\"type\":\"long\"},{\"name\":\"country_code\",\"type\":\"string\"}]}},{\"name\":\"search\",\"type\":{\"type\":\"record\",\"name\":\"search_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"query_country_code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sources\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"spam_reports_num\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"search_string\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"num_user_connecting\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"result_size\",\"type\":[\"null\",\"int\"],\"default\":null}]}},{\"name\":\"call_filter\",\"type\":{\"type\":\"record\",\"name\":\"call_filter_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"number\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"result_size\",\"type\":[\"null\",\"int\"],\"default\":null}]}},{\"name\":\"contact_request\",\"type\":{\"type\":\"record\",\"name\":\"contact_request_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"user_account\",\"type\":{\"type\":\"record\",\"name\":\"user_account_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"verified\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"secret_token\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"token_status\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"people_you_may_know\",\"type\":{\"type\":\"record\",\"name\":\"people_you_may_know_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"page\",\"type\":[\"null\",\"int\"],\"default\":null}]}},{\"name\":\"credits\",\"type\":{\"type\":\"record\",\"name\":\"credits_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"transaction_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"added_credits\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"package\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"contact\",\"type\":{\"type\":\"record\",\"name\":\"contact_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"msg_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"msg_language\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"social\",\"type\":{\"type\":\"record\",\"name\":\"social_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"contacts_upload\",\"type\":{\"type\":\"record\",\"name\":\"contacts_upload_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"upload_contact_record\",\"fields\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"social_ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}}],\"default\":null}]}},{\"name\":\"initialize\",\"type\":{\"type\":\"record\",\"name\":\"initialize_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"user_info\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"user_info_record\",\"fields\":[{\"name\":\"device_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"provider_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"operator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"screen_height\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"screen_width\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"app_language\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"client_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"build_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"suspended\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"last_time\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"caller_id_plus_enabled\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"imsi\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"oem\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"push_device_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"push_provider_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"os_var\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"os_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"primary_service_country_code_name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}},{\"name\":\"daily_counters\",\"type\":{\"type\":\"record\",\"name\":\"daily_counters_record\",\"fields\":[{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"count\",\"type\":[\"null\",\"int\"],\"default\":null}]}},{\"name\":\"ui\",\"type\":{\"type\":\"record\",\"name\":\"ui_record\",\"fields\":[{\"name\":\"truecaller_user\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"truedialer_user\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"test_group\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"event_sequence_number\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"event\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"other\",\"type\":{\"type\":\"record\",\"name\":\"other_record\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long id;
  @Deprecated public long timestamp;
  @Deprecated public long client_timestamp;
  @Deprecated public com.truecaller.logging.kafka.events.app_record app;
  @Deprecated public com.truecaller.logging.kafka.events.user_record user;
  @Deprecated public com.truecaller.logging.kafka.events.search_record search;
  @Deprecated public com.truecaller.logging.kafka.events.call_filter_record call_filter;
  @Deprecated public com.truecaller.logging.kafka.events.contact_request_record contact_request;
  @Deprecated public com.truecaller.logging.kafka.events.user_account_record user_account;
  @Deprecated public com.truecaller.logging.kafka.events.people_you_may_know_record people_you_may_know;
  @Deprecated public com.truecaller.logging.kafka.events.credits_record credits;
  @Deprecated public com.truecaller.logging.kafka.events.contact_record contact;
  @Deprecated public com.truecaller.logging.kafka.events.social_record social;
  @Deprecated public com.truecaller.logging.kafka.events.contacts_upload_record contacts_upload;
  @Deprecated public com.truecaller.logging.kafka.events.initialize_record initialize;
  @Deprecated public com.truecaller.logging.kafka.events.daily_counters_record daily_counters;
  @Deprecated public com.truecaller.logging.kafka.events.ui_record ui;
  @Deprecated public com.truecaller.logging.kafka.events.other_record other;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public app_event() {}

  /**
   * All-args constructor.
   */
  public app_event(java.lang.Long id, java.lang.Long timestamp, java.lang.Long client_timestamp, com.truecaller.logging.kafka.events.app_record app, com.truecaller.logging.kafka.events.user_record user, com.truecaller.logging.kafka.events.search_record search, com.truecaller.logging.kafka.events.call_filter_record call_filter, com.truecaller.logging.kafka.events.contact_request_record contact_request, com.truecaller.logging.kafka.events.user_account_record user_account, com.truecaller.logging.kafka.events.people_you_may_know_record people_you_may_know, com.truecaller.logging.kafka.events.credits_record credits, com.truecaller.logging.kafka.events.contact_record contact, com.truecaller.logging.kafka.events.social_record social, com.truecaller.logging.kafka.events.contacts_upload_record contacts_upload, com.truecaller.logging.kafka.events.initialize_record initialize, com.truecaller.logging.kafka.events.daily_counters_record daily_counters, com.truecaller.logging.kafka.events.ui_record ui, com.truecaller.logging.kafka.events.other_record other) {
    this.id = id;
    this.timestamp = timestamp;
    this.client_timestamp = client_timestamp;
    this.app = app;
    this.user = user;
    this.search = search;
    this.call_filter = call_filter;
    this.contact_request = contact_request;
    this.user_account = user_account;
    this.people_you_may_know = people_you_may_know;
    this.credits = credits;
    this.contact = contact;
    this.social = social;
    this.contacts_upload = contacts_upload;
    this.initialize = initialize;
    this.daily_counters = daily_counters;
    this.ui = ui;
    this.other = other;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return timestamp;
    case 2: return client_timestamp;
    case 3: return app;
    case 4: return user;
    case 5: return search;
    case 6: return call_filter;
    case 7: return contact_request;
    case 8: return user_account;
    case 9: return people_you_may_know;
    case 10: return credits;
    case 11: return contact;
    case 12: return social;
    case 13: return contacts_upload;
    case 14: return initialize;
    case 15: return daily_counters;
    case 16: return ui;
    case 17: return other;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: client_timestamp = (java.lang.Long)value$; break;
    case 3: app = (com.truecaller.logging.kafka.events.app_record)value$; break;
    case 4: user = (com.truecaller.logging.kafka.events.user_record)value$; break;
    case 5: search = (com.truecaller.logging.kafka.events.search_record)value$; break;
    case 6: call_filter = (com.truecaller.logging.kafka.events.call_filter_record)value$; break;
    case 7: contact_request = (com.truecaller.logging.kafka.events.contact_request_record)value$; break;
    case 8: user_account = (com.truecaller.logging.kafka.events.user_account_record)value$; break;
    case 9: people_you_may_know = (com.truecaller.logging.kafka.events.people_you_may_know_record)value$; break;
    case 10: credits = (com.truecaller.logging.kafka.events.credits_record)value$; break;
    case 11: contact = (com.truecaller.logging.kafka.events.contact_record)value$; break;
    case 12: social = (com.truecaller.logging.kafka.events.social_record)value$; break;
    case 13: contacts_upload = (com.truecaller.logging.kafka.events.contacts_upload_record)value$; break;
    case 14: initialize = (com.truecaller.logging.kafka.events.initialize_record)value$; break;
    case 15: daily_counters = (com.truecaller.logging.kafka.events.daily_counters_record)value$; break;
    case 16: ui = (com.truecaller.logging.kafka.events.ui_record)value$; break;
    case 17: other = (com.truecaller.logging.kafka.events.other_record)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'client_timestamp' field.
   */
  public java.lang.Long getClientTimestamp() {
    return client_timestamp;
  }

  /**
   * Sets the value of the 'client_timestamp' field.
   * @param value the value to set.
   */
  public void setClientTimestamp(java.lang.Long value) {
    this.client_timestamp = value;
  }

  /**
   * Gets the value of the 'app' field.
   */
  public com.truecaller.logging.kafka.events.app_record getApp() {
    return app;
  }

  /**
   * Sets the value of the 'app' field.
   * @param value the value to set.
   */
  public void setApp(com.truecaller.logging.kafka.events.app_record value) {
    this.app = value;
  }

  /**
   * Gets the value of the 'user' field.
   */
  public com.truecaller.logging.kafka.events.user_record getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(com.truecaller.logging.kafka.events.user_record value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'search' field.
   */
  public com.truecaller.logging.kafka.events.search_record getSearch() {
    return search;
  }

  /**
   * Sets the value of the 'search' field.
   * @param value the value to set.
   */
  public void setSearch(com.truecaller.logging.kafka.events.search_record value) {
    this.search = value;
  }

  /**
   * Gets the value of the 'call_filter' field.
   */
  public com.truecaller.logging.kafka.events.call_filter_record getCallFilter() {
    return call_filter;
  }

  /**
   * Sets the value of the 'call_filter' field.
   * @param value the value to set.
   */
  public void setCallFilter(com.truecaller.logging.kafka.events.call_filter_record value) {
    this.call_filter = value;
  }

  /**
   * Gets the value of the 'contact_request' field.
   */
  public com.truecaller.logging.kafka.events.contact_request_record getContactRequest() {
    return contact_request;
  }

  /**
   * Sets the value of the 'contact_request' field.
   * @param value the value to set.
   */
  public void setContactRequest(com.truecaller.logging.kafka.events.contact_request_record value) {
    this.contact_request = value;
  }

  /**
   * Gets the value of the 'user_account' field.
   */
  public com.truecaller.logging.kafka.events.user_account_record getUserAccount() {
    return user_account;
  }

  /**
   * Sets the value of the 'user_account' field.
   * @param value the value to set.
   */
  public void setUserAccount(com.truecaller.logging.kafka.events.user_account_record value) {
    this.user_account = value;
  }

  /**
   * Gets the value of the 'people_you_may_know' field.
   */
  public com.truecaller.logging.kafka.events.people_you_may_know_record getPeopleYouMayKnow() {
    return people_you_may_know;
  }

  /**
   * Sets the value of the 'people_you_may_know' field.
   * @param value the value to set.
   */
  public void setPeopleYouMayKnow(com.truecaller.logging.kafka.events.people_you_may_know_record value) {
    this.people_you_may_know = value;
  }

  /**
   * Gets the value of the 'credits' field.
   */
  public com.truecaller.logging.kafka.events.credits_record getCredits() {
    return credits;
  }

  /**
   * Sets the value of the 'credits' field.
   * @param value the value to set.
   */
  public void setCredits(com.truecaller.logging.kafka.events.credits_record value) {
    this.credits = value;
  }

  /**
   * Gets the value of the 'contact' field.
   */
  public com.truecaller.logging.kafka.events.contact_record getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(com.truecaller.logging.kafka.events.contact_record value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'social' field.
   */
  public com.truecaller.logging.kafka.events.social_record getSocial() {
    return social;
  }

  /**
   * Sets the value of the 'social' field.
   * @param value the value to set.
   */
  public void setSocial(com.truecaller.logging.kafka.events.social_record value) {
    this.social = value;
  }

  /**
   * Gets the value of the 'contacts_upload' field.
   */
  public com.truecaller.logging.kafka.events.contacts_upload_record getContactsUpload() {
    return contacts_upload;
  }

  /**
   * Sets the value of the 'contacts_upload' field.
   * @param value the value to set.
   */
  public void setContactsUpload(com.truecaller.logging.kafka.events.contacts_upload_record value) {
    this.contacts_upload = value;
  }

  /**
   * Gets the value of the 'initialize' field.
   */
  public com.truecaller.logging.kafka.events.initialize_record getInitialize() {
    return initialize;
  }

  /**
   * Sets the value of the 'initialize' field.
   * @param value the value to set.
   */
  public void setInitialize(com.truecaller.logging.kafka.events.initialize_record value) {
    this.initialize = value;
  }

  /**
   * Gets the value of the 'daily_counters' field.
   */
  public com.truecaller.logging.kafka.events.daily_counters_record getDailyCounters() {
    return daily_counters;
  }

  /**
   * Sets the value of the 'daily_counters' field.
   * @param value the value to set.
   */
  public void setDailyCounters(com.truecaller.logging.kafka.events.daily_counters_record value) {
    this.daily_counters = value;
  }

  /**
   * Gets the value of the 'ui' field.
   */
  public com.truecaller.logging.kafka.events.ui_record getUi() {
    return ui;
  }

  /**
   * Sets the value of the 'ui' field.
   * @param value the value to set.
   */
  public void setUi(com.truecaller.logging.kafka.events.ui_record value) {
    this.ui = value;
  }

  /**
   * Gets the value of the 'other' field.
   */
  public com.truecaller.logging.kafka.events.other_record getOther() {
    return other;
  }

  /**
   * Sets the value of the 'other' field.
   * @param value the value to set.
   */
  public void setOther(com.truecaller.logging.kafka.events.other_record value) {
    this.other = value;
  }

  /** Creates a new app_event RecordBuilder */
  public static com.truecaller.logging.kafka.events.app_event.Builder newBuilder() {
    return new com.truecaller.logging.kafka.events.app_event.Builder();
  }
  
  /** Creates a new app_event RecordBuilder by copying an existing Builder */
  public static com.truecaller.logging.kafka.events.app_event.Builder newBuilder(com.truecaller.logging.kafka.events.app_event.Builder other) {
    return new com.truecaller.logging.kafka.events.app_event.Builder(other);
  }
  
  /** Creates a new app_event RecordBuilder by copying an existing app_event instance */
  public static com.truecaller.logging.kafka.events.app_event.Builder newBuilder(com.truecaller.logging.kafka.events.app_event other) {
    return new com.truecaller.logging.kafka.events.app_event.Builder(other);
  }
  
  /**
   * RecordBuilder for app_event instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<app_event>
    implements org.apache.avro.data.RecordBuilder<app_event> {

    private java.lang.Long id;
    private long timestamp;
    private long client_timestamp;
    private com.truecaller.logging.kafka.events.app_record app;
    private com.truecaller.logging.kafka.events.user_record user;
    private com.truecaller.logging.kafka.events.search_record search;
    private com.truecaller.logging.kafka.events.call_filter_record call_filter;
    private com.truecaller.logging.kafka.events.contact_request_record contact_request;
    private com.truecaller.logging.kafka.events.user_account_record user_account;
    private com.truecaller.logging.kafka.events.people_you_may_know_record people_you_may_know;
    private com.truecaller.logging.kafka.events.credits_record credits;
    private com.truecaller.logging.kafka.events.contact_record contact;
    private com.truecaller.logging.kafka.events.social_record social;
    private com.truecaller.logging.kafka.events.contacts_upload_record contacts_upload;
    private com.truecaller.logging.kafka.events.initialize_record initialize;
    private com.truecaller.logging.kafka.events.daily_counters_record daily_counters;
    private com.truecaller.logging.kafka.events.ui_record ui;
    private com.truecaller.logging.kafka.events.other_record other;

    /** Creates a new Builder */
    private Builder() {
      super(com.truecaller.logging.kafka.events.app_event.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.truecaller.logging.kafka.events.app_event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.client_timestamp)) {
        this.client_timestamp = data().deepCopy(fields()[2].schema(), other.client_timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.app)) {
        this.app = data().deepCopy(fields()[3].schema(), other.app);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.user)) {
        this.user = data().deepCopy(fields()[4].schema(), other.user);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.search)) {
        this.search = data().deepCopy(fields()[5].schema(), other.search);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.call_filter)) {
        this.call_filter = data().deepCopy(fields()[6].schema(), other.call_filter);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.contact_request)) {
        this.contact_request = data().deepCopy(fields()[7].schema(), other.contact_request);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_account)) {
        this.user_account = data().deepCopy(fields()[8].schema(), other.user_account);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.people_you_may_know)) {
        this.people_you_may_know = data().deepCopy(fields()[9].schema(), other.people_you_may_know);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.credits)) {
        this.credits = data().deepCopy(fields()[10].schema(), other.credits);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contact)) {
        this.contact = data().deepCopy(fields()[11].schema(), other.contact);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.social)) {
        this.social = data().deepCopy(fields()[12].schema(), other.social);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.contacts_upload)) {
        this.contacts_upload = data().deepCopy(fields()[13].schema(), other.contacts_upload);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.initialize)) {
        this.initialize = data().deepCopy(fields()[14].schema(), other.initialize);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.daily_counters)) {
        this.daily_counters = data().deepCopy(fields()[15].schema(), other.daily_counters);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.ui)) {
        this.ui = data().deepCopy(fields()[16].schema(), other.ui);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.other)) {
        this.other = data().deepCopy(fields()[17].schema(), other.other);
        fieldSetFlags()[17] = true;
      }
    }
    
    /** Creates a Builder by copying an existing app_event instance */
    private Builder(com.truecaller.logging.kafka.events.app_event other) {
            super(com.truecaller.logging.kafka.events.app_event.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.client_timestamp)) {
        this.client_timestamp = data().deepCopy(fields()[2].schema(), other.client_timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.app)) {
        this.app = data().deepCopy(fields()[3].schema(), other.app);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.user)) {
        this.user = data().deepCopy(fields()[4].schema(), other.user);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.search)) {
        this.search = data().deepCopy(fields()[5].schema(), other.search);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.call_filter)) {
        this.call_filter = data().deepCopy(fields()[6].schema(), other.call_filter);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.contact_request)) {
        this.contact_request = data().deepCopy(fields()[7].schema(), other.contact_request);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_account)) {
        this.user_account = data().deepCopy(fields()[8].schema(), other.user_account);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.people_you_may_know)) {
        this.people_you_may_know = data().deepCopy(fields()[9].schema(), other.people_you_may_know);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.credits)) {
        this.credits = data().deepCopy(fields()[10].schema(), other.credits);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contact)) {
        this.contact = data().deepCopy(fields()[11].schema(), other.contact);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.social)) {
        this.social = data().deepCopy(fields()[12].schema(), other.social);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.contacts_upload)) {
        this.contacts_upload = data().deepCopy(fields()[13].schema(), other.contacts_upload);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.initialize)) {
        this.initialize = data().deepCopy(fields()[14].schema(), other.initialize);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.daily_counters)) {
        this.daily_counters = data().deepCopy(fields()[15].schema(), other.daily_counters);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.ui)) {
        this.ui = data().deepCopy(fields()[16].schema(), other.ui);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.other)) {
        this.other = data().deepCopy(fields()[17].schema(), other.other);
        fieldSetFlags()[17] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'client_timestamp' field */
    public java.lang.Long getClientTimestamp() {
      return client_timestamp;
    }
    
    /** Sets the value of the 'client_timestamp' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setClientTimestamp(long value) {
      validate(fields()[2], value);
      this.client_timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'client_timestamp' field has been set */
    public boolean hasClientTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'client_timestamp' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearClientTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'app' field */
    public com.truecaller.logging.kafka.events.app_record getApp() {
      return app;
    }
    
    /** Sets the value of the 'app' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setApp(com.truecaller.logging.kafka.events.app_record value) {
      validate(fields()[3], value);
      this.app = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'app' field has been set */
    public boolean hasApp() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'app' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearApp() {
      app = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'user' field */
    public com.truecaller.logging.kafka.events.user_record getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setUser(com.truecaller.logging.kafka.events.user_record value) {
      validate(fields()[4], value);
      this.user = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'user' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearUser() {
      user = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'search' field */
    public com.truecaller.logging.kafka.events.search_record getSearch() {
      return search;
    }
    
    /** Sets the value of the 'search' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setSearch(com.truecaller.logging.kafka.events.search_record value) {
      validate(fields()[5], value);
      this.search = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'search' field has been set */
    public boolean hasSearch() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'search' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearSearch() {
      search = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'call_filter' field */
    public com.truecaller.logging.kafka.events.call_filter_record getCallFilter() {
      return call_filter;
    }
    
    /** Sets the value of the 'call_filter' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setCallFilter(com.truecaller.logging.kafka.events.call_filter_record value) {
      validate(fields()[6], value);
      this.call_filter = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'call_filter' field has been set */
    public boolean hasCallFilter() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'call_filter' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearCallFilter() {
      call_filter = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'contact_request' field */
    public com.truecaller.logging.kafka.events.contact_request_record getContactRequest() {
      return contact_request;
    }
    
    /** Sets the value of the 'contact_request' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setContactRequest(com.truecaller.logging.kafka.events.contact_request_record value) {
      validate(fields()[7], value);
      this.contact_request = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'contact_request' field has been set */
    public boolean hasContactRequest() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'contact_request' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearContactRequest() {
      contact_request = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'user_account' field */
    public com.truecaller.logging.kafka.events.user_account_record getUserAccount() {
      return user_account;
    }
    
    /** Sets the value of the 'user_account' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setUserAccount(com.truecaller.logging.kafka.events.user_account_record value) {
      validate(fields()[8], value);
      this.user_account = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'user_account' field has been set */
    public boolean hasUserAccount() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'user_account' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearUserAccount() {
      user_account = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'people_you_may_know' field */
    public com.truecaller.logging.kafka.events.people_you_may_know_record getPeopleYouMayKnow() {
      return people_you_may_know;
    }
    
    /** Sets the value of the 'people_you_may_know' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setPeopleYouMayKnow(com.truecaller.logging.kafka.events.people_you_may_know_record value) {
      validate(fields()[9], value);
      this.people_you_may_know = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'people_you_may_know' field has been set */
    public boolean hasPeopleYouMayKnow() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'people_you_may_know' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearPeopleYouMayKnow() {
      people_you_may_know = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'credits' field */
    public com.truecaller.logging.kafka.events.credits_record getCredits() {
      return credits;
    }
    
    /** Sets the value of the 'credits' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setCredits(com.truecaller.logging.kafka.events.credits_record value) {
      validate(fields()[10], value);
      this.credits = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'credits' field has been set */
    public boolean hasCredits() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'credits' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearCredits() {
      credits = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'contact' field */
    public com.truecaller.logging.kafka.events.contact_record getContact() {
      return contact;
    }
    
    /** Sets the value of the 'contact' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setContact(com.truecaller.logging.kafka.events.contact_record value) {
      validate(fields()[11], value);
      this.contact = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'contact' field has been set */
    public boolean hasContact() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'contact' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearContact() {
      contact = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'social' field */
    public com.truecaller.logging.kafka.events.social_record getSocial() {
      return social;
    }
    
    /** Sets the value of the 'social' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setSocial(com.truecaller.logging.kafka.events.social_record value) {
      validate(fields()[12], value);
      this.social = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'social' field has been set */
    public boolean hasSocial() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'social' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearSocial() {
      social = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'contacts_upload' field */
    public com.truecaller.logging.kafka.events.contacts_upload_record getContactsUpload() {
      return contacts_upload;
    }
    
    /** Sets the value of the 'contacts_upload' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setContactsUpload(com.truecaller.logging.kafka.events.contacts_upload_record value) {
      validate(fields()[13], value);
      this.contacts_upload = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'contacts_upload' field has been set */
    public boolean hasContactsUpload() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'contacts_upload' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearContactsUpload() {
      contacts_upload = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'initialize' field */
    public com.truecaller.logging.kafka.events.initialize_record getInitialize() {
      return initialize;
    }
    
    /** Sets the value of the 'initialize' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setInitialize(com.truecaller.logging.kafka.events.initialize_record value) {
      validate(fields()[14], value);
      this.initialize = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'initialize' field has been set */
    public boolean hasInitialize() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'initialize' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearInitialize() {
      initialize = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'daily_counters' field */
    public com.truecaller.logging.kafka.events.daily_counters_record getDailyCounters() {
      return daily_counters;
    }
    
    /** Sets the value of the 'daily_counters' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setDailyCounters(com.truecaller.logging.kafka.events.daily_counters_record value) {
      validate(fields()[15], value);
      this.daily_counters = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'daily_counters' field has been set */
    public boolean hasDailyCounters() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'daily_counters' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearDailyCounters() {
      daily_counters = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'ui' field */
    public com.truecaller.logging.kafka.events.ui_record getUi() {
      return ui;
    }
    
    /** Sets the value of the 'ui' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setUi(com.truecaller.logging.kafka.events.ui_record value) {
      validate(fields()[16], value);
      this.ui = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'ui' field has been set */
    public boolean hasUi() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'ui' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearUi() {
      ui = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'other' field */
    public com.truecaller.logging.kafka.events.other_record getOther() {
      return other;
    }
    
    /** Sets the value of the 'other' field */
    public com.truecaller.logging.kafka.events.app_event.Builder setOther(com.truecaller.logging.kafka.events.other_record value) {
      validate(fields()[17], value);
      this.other = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'other' field has been set */
    public boolean hasOther() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'other' field */
    public com.truecaller.logging.kafka.events.app_event.Builder clearOther() {
      other = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public app_event build() {
      try {
        app_event record = new app_event();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.client_timestamp = fieldSetFlags()[2] ? this.client_timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.app = fieldSetFlags()[3] ? this.app : (com.truecaller.logging.kafka.events.app_record) defaultValue(fields()[3]);
        record.user = fieldSetFlags()[4] ? this.user : (com.truecaller.logging.kafka.events.user_record) defaultValue(fields()[4]);
        record.search = fieldSetFlags()[5] ? this.search : (com.truecaller.logging.kafka.events.search_record) defaultValue(fields()[5]);
        record.call_filter = fieldSetFlags()[6] ? this.call_filter : (com.truecaller.logging.kafka.events.call_filter_record) defaultValue(fields()[6]);
        record.contact_request = fieldSetFlags()[7] ? this.contact_request : (com.truecaller.logging.kafka.events.contact_request_record) defaultValue(fields()[7]);
        record.user_account = fieldSetFlags()[8] ? this.user_account : (com.truecaller.logging.kafka.events.user_account_record) defaultValue(fields()[8]);
        record.people_you_may_know = fieldSetFlags()[9] ? this.people_you_may_know : (com.truecaller.logging.kafka.events.people_you_may_know_record) defaultValue(fields()[9]);
        record.credits = fieldSetFlags()[10] ? this.credits : (com.truecaller.logging.kafka.events.credits_record) defaultValue(fields()[10]);
        record.contact = fieldSetFlags()[11] ? this.contact : (com.truecaller.logging.kafka.events.contact_record) defaultValue(fields()[11]);
        record.social = fieldSetFlags()[12] ? this.social : (com.truecaller.logging.kafka.events.social_record) defaultValue(fields()[12]);
        record.contacts_upload = fieldSetFlags()[13] ? this.contacts_upload : (com.truecaller.logging.kafka.events.contacts_upload_record) defaultValue(fields()[13]);
        record.initialize = fieldSetFlags()[14] ? this.initialize : (com.truecaller.logging.kafka.events.initialize_record) defaultValue(fields()[14]);
        record.daily_counters = fieldSetFlags()[15] ? this.daily_counters : (com.truecaller.logging.kafka.events.daily_counters_record) defaultValue(fields()[15]);
        record.ui = fieldSetFlags()[16] ? this.ui : (com.truecaller.logging.kafka.events.ui_record) defaultValue(fields()[16]);
        record.other = fieldSetFlags()[17] ? this.other : (com.truecaller.logging.kafka.events.other_record) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
