/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.truecaller.logging.kafka.events;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class initialize_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"initialize_record\",\"namespace\":\"com.truecaller.logging.kafka.events\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"user_info\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"user_info_record\",\"fields\":[{\"name\":\"device_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"provider_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"operator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"screen_height\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"screen_width\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"app_language\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"client_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"build_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"suspended\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"last_time\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"caller_id_plus_enabled\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"imsi\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"oem\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"push_device_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"push_provider_id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"os_var\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"os_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"primary_service_country_code_name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence action;
  @Deprecated public com.truecaller.logging.kafka.events.user_info_record user_info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public initialize_record() {}

  /**
   * All-args constructor.
   */
  public initialize_record(java.lang.CharSequence action, com.truecaller.logging.kafka.events.user_info_record user_info) {
    this.action = action;
    this.user_info = user_info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return action;
    case 1: return user_info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: action = (java.lang.CharSequence)value$; break;
    case 1: user_info = (com.truecaller.logging.kafka.events.user_info_record)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'action' field.
   */
  public java.lang.CharSequence getAction() {
    return action;
  }

  /**
   * Sets the value of the 'action' field.
   * @param value the value to set.
   */
  public void setAction(java.lang.CharSequence value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'user_info' field.
   */
  public com.truecaller.logging.kafka.events.user_info_record getUserInfo() {
    return user_info;
  }

  /**
   * Sets the value of the 'user_info' field.
   * @param value the value to set.
   */
  public void setUserInfo(com.truecaller.logging.kafka.events.user_info_record value) {
    this.user_info = value;
  }

  /** Creates a new initialize_record RecordBuilder */
  public static com.truecaller.logging.kafka.events.initialize_record.Builder newBuilder() {
    return new com.truecaller.logging.kafka.events.initialize_record.Builder();
  }
  
  /** Creates a new initialize_record RecordBuilder by copying an existing Builder */
  public static com.truecaller.logging.kafka.events.initialize_record.Builder newBuilder(com.truecaller.logging.kafka.events.initialize_record.Builder other) {
    return new com.truecaller.logging.kafka.events.initialize_record.Builder(other);
  }
  
  /** Creates a new initialize_record RecordBuilder by copying an existing initialize_record instance */
  public static com.truecaller.logging.kafka.events.initialize_record.Builder newBuilder(com.truecaller.logging.kafka.events.initialize_record other) {
    return new com.truecaller.logging.kafka.events.initialize_record.Builder(other);
  }
  
  /**
   * RecordBuilder for initialize_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<initialize_record>
    implements org.apache.avro.data.RecordBuilder<initialize_record> {

    private java.lang.CharSequence action;
    private com.truecaller.logging.kafka.events.user_info_record user_info;

    /** Creates a new Builder */
    private Builder() {
      super(com.truecaller.logging.kafka.events.initialize_record.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.truecaller.logging.kafka.events.initialize_record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.action)) {
        this.action = data().deepCopy(fields()[0].schema(), other.action);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_info)) {
        this.user_info = data().deepCopy(fields()[1].schema(), other.user_info);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing initialize_record instance */
    private Builder(com.truecaller.logging.kafka.events.initialize_record other) {
            super(com.truecaller.logging.kafka.events.initialize_record.SCHEMA$);
      if (isValidValue(fields()[0], other.action)) {
        this.action = data().deepCopy(fields()[0].schema(), other.action);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_info)) {
        this.user_info = data().deepCopy(fields()[1].schema(), other.user_info);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'action' field */
    public java.lang.CharSequence getAction() {
      return action;
    }
    
    /** Sets the value of the 'action' field */
    public com.truecaller.logging.kafka.events.initialize_record.Builder setAction(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.action = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'action' field has been set */
    public boolean hasAction() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'action' field */
    public com.truecaller.logging.kafka.events.initialize_record.Builder clearAction() {
      action = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'user_info' field */
    public com.truecaller.logging.kafka.events.user_info_record getUserInfo() {
      return user_info;
    }
    
    /** Sets the value of the 'user_info' field */
    public com.truecaller.logging.kafka.events.initialize_record.Builder setUserInfo(com.truecaller.logging.kafka.events.user_info_record value) {
      validate(fields()[1], value);
      this.user_info = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'user_info' field has been set */
    public boolean hasUserInfo() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'user_info' field */
    public com.truecaller.logging.kafka.events.initialize_record.Builder clearUserInfo() {
      user_info = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public initialize_record build() {
      try {
        initialize_record record = new initialize_record();
        record.action = fieldSetFlags()[0] ? this.action : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.user_info = fieldSetFlags()[1] ? this.user_info : (com.truecaller.logging.kafka.events.user_info_record) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
